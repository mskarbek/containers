---
- hosts: "localhost"
  gather_facts: false
  vars_files:
    - "vars/common.yaml"
    - "vars/main.yaml"
  tasks:
    - ansible.builtin.import_tasks:
        file: "tasks/buildah_create.yaml"
    - ansible.builtin.file:
        dest: "{{ container_path }}{{ item.dest }}"
        state: "{{ item.state }}"
        owner: "root"
        group: "root"
        mode: "{{ item.mode }}"
      loop:
        - dest: "/root/.ansible"
          state: "directory"
          mode: "0755"
        - dest: "/etc/ansible"
          state: "directory"
          mode: "0755"
        - dest: "/etc/ansible/hosts"
          state: "touch"
          mode: "0644"
        - dest: "/root/.ansible/requirements.yaml"
          state: "touch"
          mode: "0644"
        - dest: "/etc/pki/rpm-gpg/RPM-GPG-KEY-PGDG"
          state: "touch"
          mode: "0644"
      loop_control:
        label: "{{ item.dest }}"
    - ansible.builtin.file:
        dest: "{{ container_path }}{{ item.dest }}"
        state: "{{ item.state }}"
        owner: "root"
        group: "root"
        mode: "{{ item.mode }}"
      loop:
        - dest: "/etc/yum.repos.d/pgdg-redhat-all.repo"
          state: "touch"
          mode: "0644"
      loop_control:
        label: "{{ item.dest }}"
      when: "not use_repository"
    - ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ container_path }}{{ item.dest }}"
        owner: "root"
        group: "root"
        mode: "0644"
      loop:
        - src: "hosts"
          dest: "/etc/ansible/hosts"
        - src: "requirements.yaml"
          dest: "/root/.ansible/requirements.yaml"
        - src: "rpm-gpg/RPM-GPG-KEY-PGDG"
          dest: "/etc/pki/rpm-gpg/RPM-GPG-KEY-PGDG"
      loop_control:
        label: "{{ item.dest }}"
    - ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ container_path }}{{ item.dest }}"
        owner: "root"
        group: "root"
        mode: "0644"
      loop:
        - src: "repos/pgdg-redhat-all.repo"
          dest: "/etc/yum.repos.d/pgdg-redhat-all.repo"
      loop_control:
        label: "{{ item.dest }}"
      when: "not use_repository"
    - ansible.builtin.command:
        cmd: "rpm --root {{ container_path }} --import {{ container_path }}/etc/pki/rpm-gpg/{{ item }}"
      loop:
        - "RPM-GPG-KEY-PGDG"
# Ansible DNF module issue:
# https://github.com/ansible/ansible/issues/80644
    - ansible.builtin.command:
        cmd: >
          dnf
          --quiet
          --assumeyes
          --disableplugin="subscription-manager"
          --config={{ container_path }}/etc/dnf/dnf.conf
          --installroot={{ container_path }}
          install
          ansible-core
          git-core
          openssh-clients
          podman-remote
          python3-attrs
          python3-boto3
          python3-botocore
          python3-certifi
          python3-charset-normalizer
          python3-dns
          python3-idna
          python3-pbr
          python3-prettytable
          python3-psycopg2
          python3-psycopg3
          python3-requests
          python3-urllib3
          python3-wcwidth
          rsync
    - ansible.builtin.command:
        cmd: "{{ item }}"
      loop:
        - "buildah run --network=host {{ container_uuid }} pip3.11 install ara=={{ ara_version }} python-consul hvac"
        - "buildah run --network=host --workingdir=/root {{ container_uuid }} ansible-galaxy collection install -r .ansible/requirements.yaml -p .ansible/collections"
        - "buildah run --network=none {{ container_uuid }} ln -s /usr/bin/podman-remote /usr/bin/podman"
      when: "proxy_url is not defined"
    - ansible.builtin.command:
        cmd: "{{ item }}"
      loop:
        - "buildah run --network=host {{ container_uuid }} pip3.11 install ara=={{ ara_version }} python-consul hvac"
        - "buildah run --network=host --env='HTTP_PROXY={{ proxy_url }}' --env='HTTPS_PROXY={{ proxy_url }}' --workingdir=/root {{ container_uuid }} ansible-galaxy collection install -r .ansible/requirements.yaml -p .ansible/collections"
        - "buildah run --network=none {{ container_uuid }} ln -s /usr/bin/podman-remote /usr/bin/podman"
      when: "proxy_url is defined"
    - ansible.builtin.file:
        dest: "{{ container_path }}/root/.cache"
        state: "absent"
    - ansible.builtin.import_tasks:
        file: "tasks/buildah_commit.yaml"
