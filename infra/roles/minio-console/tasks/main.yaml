---
- name: Get minio-console pod ids
  ansible.builtin.import_role:
    name: pod-id
    tasks_from: get
  vars:
    service: minio-console

- name: Stop current minio-console pod
  containers.podman.podman_pod:
    name: "{{ env + '-minio-console-' + current_pod }}"
    state: stopped
  when: current_pod != []
- name: Stop failed minio-console pod
  containers.podman.podman_pod:
    name: "{{ env + '-minio-console-' + failed_pod }}"
    state: stopped
  when: failed_pod != []

- name: Create minio-console volumes
  ansible.builtin.include_role:
    name: podman-volume
  vars:
    service: minio-console
    container_type: app
    volume_mountpoint: "{{ item }}"
  loop:
    - /etc/minio-console

- name: Create minio-console config
  ansible.builtin.template:
    src: minio-console.env.j2
    dest: "/var/lib/volumes/storage/{{ env + '-' + service + '-' + future_pod + '-app' + '/etc/minio-console'|replace('/', '-') }}/_data/minio-console.env"

- name: Create minio-console pod
  ansible.builtin.import_role:
    name: podman-pod
  vars:
    service: minio-console
    pod_publish:
- name: Create minio-console container
  ansible.builtin.import_role:
    name: podman-container
  vars:
    service: minio-console
    container_image: "{{ lookup('consul_kv', env + '/defaults/registry_url', host=consul_host) + '/bootstrap/minio-console:latest' }}"
    container_type: app
    container_volumes:
      - "{{ env + '-' + service + '-' + future_pod + '-app' + '/etc/minio-console'|replace('/', '-') }}:/etc/minio-console:z"
    container_secrets:

- name: Create minio-console mesh
  ansible.builtin.import_role:
    name: mesh
  vars:
    service: minio-console
    mesh_gateway:
    mesh_inbound:
      - service: minio-console
        protocol: http
        address: "127.0.0.1"
        port: "9000"
    mesh_outbound:
      - service: minio
        port: "12001"

- name: Set minio-console pod ids
  ansible.builtin.import_role:
    name: pod-id
    tasks_from: set
  vars:
    service: minio-console
