---
- name: Get nexus pod ids
  ansible.builtin.import_role:
    name: pod-id
    tasks_from: get
  vars:
    service: nexus

- name: Stop current nexus pod
  containers.podman.podman_pod:
    name: "{{ env + '-nexus-' + current_pod }}"
    state: stopped
  when: current_pod != []
- name: Stop failed nexus pod
  containers.podman.podman_pod:
    name: "{{ env + '-nexus-' + failed_pod }}"
    state: stopped
  when: failed_pod != []

- name: Create nexus volumes
  ansible.builtin.include_role:
    name: podman-volume
  vars:
    service: nexus
    container_type: app
    volume_mountpoint: "/var/lib/sonatype-work"

- name: Create nexus pod
  ansible.builtin.import_role:
    name: podman-pod
  vars:
    service: nexus
    pod_publish:
- name: Create nexus container
  ansible.builtin.import_role:
    name: podman-container
  vars:
    service: nexus
    container_image: "{{ lookup('consul_kv', env + '/defaults/registry_url', host=consul_host) + '/bootstrap/nexus:latest' }}"
    container_type: app
    container_volumes:
      - "{{ env + '-' + service + '-' + future_pod + '-app' + '/var/lib/sonatype-work'|replace('/', '-') }}:/var/lib/sonatype-work:z"
    container_secrets:

- name: Create nexus mesh
  ansible.builtin.import_role:
    name: mesh
  vars:
    service: nexus
    mesh_gateway:
    mesh_inbound:
      - service: nexus-repo
        protocol: http
        address: "127.0.0.1"
        port: "8081"
      - service: nexus-registry
        protocol: http
        address: "127.0.0.1"
        port: "8082"
    mesh_outbound:
      - service: minio
        port: 12001

- name: Set nexus pod ids
  ansible.builtin.import_role:
    name: pod-id
    tasks_from: set
  vars:
    service: nexus
