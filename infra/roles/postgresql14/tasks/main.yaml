---
- name: Get postgresql14 pod ids
  ansible.builtin.import_role:
    name: pod-id
    tasks_from: get
  vars:
    service: postgresql14

- name: Stop current postgresql14 pod
  containers.podman.podman_pod:
    name: "{{ env + '-postgresql14-' + current_pod }}"
    state: stopped
  when: current_pod != []
- name: Stop failed postgresql14 pod
  containers.podman.podman_pod:
    name: "{{ env + '-postgresql14-' + failed_pod }}"
    state: stopped
  when: failed_pod != []

- name: Create postgresql14 volumes
  ansible.builtin.include_role:
    name: podman-volume
  vars:
    service: postgresql14
    container_type: app
    volume_mountpoint: "/var/lib/pgsql/14/data"

- name: Create postgresql14 pod
  ansible.builtin.import_role:
    name: podman-pod
  vars:
    service: postgresql14
    pod_publish:
- name: Create postgresql14 container
  ansible.builtin.import_role:
    name: podman-container
  vars:
    service: postgresql14
    container_image: "{{ lookup('consul_kv', env + '/defaults/registry_url', host=consul_host) + '/bootstrap/postgresql14:latest' }}"
    container_type: app
    container_volumes:
      - "{{ env + '-' + service + '-' + future_pod + '-app' + '/var/lib/pgsql/14/data'|replace('/', '-') }}:/var/lib/pgsql/14/data:z"
    container_secrets:

- name: Create postgresql14 mesh
  ansible.builtin.import_role:
    name: mesh
  vars:
    service: postgresql14
    mesh_gateway:
    mesh_inbound:
      - service: postgres
        protocol: tcp
        address: "127.0.0.1"
        port: "5432"
    mesh_outbound:

- name: Set postgresql14 pod ids
  ansible.builtin.import_role:
    name: pod-id
    tasks_from: set
  vars:
    service: postgresql14
