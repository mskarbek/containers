---
- hosts: "localhost"
  gather_facts: false
  vars_files:
    - "vars/common.yaml"
    - "vars/main.yaml"
    - "vars/runner.yaml"
  tasks:
    - ansible.builtin.import_tasks:
        file: "tasks/buildah_create.yaml"
    - ansible.builtin.file:
        dest: "{{ container_path }}{{ item }}"
        state: "touch"
        owner: "root"
        group: "root"
        mode: "0755"
      loop:
        - "/usr/local/bin/gitlab-runner"
    - ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ container_path }}{{ item.dest }}"
        force: true
        owner: "root"
        group: "root"
        mode: "0755"
      loop:
        - url: "{{ gitlab_runner_public_url }}"
          dest: "/usr/local/bin/gitlab-runner"
      loop_control:
        label: "{{ item.dest }}"
      when: "assents == 'remote'"
    - ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ container_path }}{{ item.dest }}"
        force: true
        username: "{{ repository_username }}"
        password: "{{ repository_password }}"
        owner: "root"
        group: "root"
        mode: "0755"
      loop:
        - url: "{{ gitlab_runner_proxy_url }}"
          dest: "/usr/local/bin/gitlab-runner"
      loop_control:
        label: "{{ item.dest }}"
      when: "assents == 'proxy'"
    - ansible.posix.synchronize:
        src: rootfs/
        dest: "{{ container_path }}/"
        archive: false
        links: true
        recursive: true
        rsync_opts:
          - "--exclude=.gitkeep"
          - "--ignore-existing"
    - ansible.builtin.command:
        cmd: "{{ item }}"
      loop:
        - "buildah run --network none {{ container_uuid }} systemctl enable gitlab-runner.service"
        - "buildah config --volume /etc/gitlab-runner {{ container_uuid }}"
        - "buildah config --volume /var/lib/gitlab-runner {{ container_uuid }}"
    - ansible.builtin.import_tasks:
        file: "tasks/buildah_commit.yaml"
- hosts: "localhost"
  gather_facts: false
  vars_files:
    - "vars/common.yaml"
    - "vars/main.yaml"
    - "vars/helper.yaml"
  tasks:
    - ansible.builtin.import_tasks:
        file: "tasks/buildah_create.yaml"
# Ansible DNF module issue:
# https://github.com/ansible/ansible/issues/80644
    - ansible.builtin.command:
        cmd: >
          dnf
          --quiet
          --assumeyes
          --disableplugin="subscription-manager"
          --config={{ container_path }}/etc/dnf/dnf.conf
          --installroot={{ container_path }}
          install
          git-core
          git-lfs
          hostname
          jq
          openssh-clients
          rsync
          tar
          unzip
    - ansible.builtin.file:
        dest: "{{ container_path }}{{ item }}"
        state: "touch"
        owner: "root"
        group: "root"
        mode: "0755"
      loop:
        - "/usr/bin/gitlab-runner-build"
        - "/usr/bin/gitlab-runner-helper"
        - "/usr/bin/dumb-init"
    - ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ container_path }}{{ item.dest }}"
        owner: "root"
        group: "root"
        mode: "0755"
      loop:
        - src: "gitlab-runner-build"
          dest: "/usr/bin/gitlab-runner-build"
      loop_control:
        label: "{{ item.dest }}"
    - ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ container_path }}{{ item.dest }}"
        force: true
        owner: "root"
        group: "root"
        mode: "0755"
      loop:
        - url: "{{ gitlab_runner_helper_public_url }}"
          dest: "/usr/bin/gitlab-runner-helper"
        - url: "{{ dumb_init_public_url }}"
          dest: "/usr/bin/dumb-init"
      loop_control:
        label: "{{ item.dest }}"
      when: "assents == 'remote'"
    - ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "{{ container_path }}/usr/bin/{{ item.dest }}"
        force: true
        username: "{{ repository_username }}"
        password: "{{ repository_password }}"
        owner: "root"
        group: "root"
        mode: "0755"
      loop:
        - url: "{{ gitlab_runner_helper_proxy_url }}"
          dest: "gitlab-runner-helper"
        - url: "{{ dumb_init_proxy_url }}"
          dest: "dumb-init"
      loop_control:
        label: "{{ item.dest }}"
      when: "assents == 'proxy'"
    - ansible.builtin.command:
        cmd: "{{ item }}"
      loop:
        - "buildah config --entrypoint='[ \"/usr/bin/dumb-init\" ]' {{ container_uuid }}"
    - ansible.builtin.import_tasks:
        file: "tasks/buildah_commit.yaml"
