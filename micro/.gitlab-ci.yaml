default:
  tags:
    - buildah

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "trigger"
    - if: $CI_PIPELINE_SOURCE == "pipeline"

stages:
  - build
  - trigger

build-image:
  stage: build
  before_script:
    # downlowad meta repo
    - BASE_URL=`printf $CI_REPOSITORY_URL | sed "s;\/*$CI_PROJECT_PATH.*;;"`
    - REPO_URL="$BASE_URL/containers/meta.git"
    - REPO_DIR=../meta
    - rm -fr $REPO_DIR
    - git clone $REPO_URL $REPO_DIR
    # source meta
    - source ../meta/common.sh
    # login to registry
    - skopeo_login
    # generate tag
    - export IMAGE_TAG=$(bash ../meta/tag.sh)
    - printf "IMAGE_TAG=$IMAGE_TAG" > ./build.env
    # save ca file
    - mkdir -vp ./files
    - if [ ! -z $INTERNAL_CA_PEM ]; then printf $INTERNAL_CA_PEM | base64 -d - > ./files/internal-ca.pem; fi
    - if [ -z $IMAGE_BOOTSTRAP ]; then pushd ./files; ./proxy.repo.sh; popd; fi
  script:
    # build image
    - ./build.sh
    # tag repo
    - PUSH_URL=`printf $CI_REPOSITORY_URL | sed "s;:\/\/.*@;:\/\/oauth2:$CONTAINERS_CI_TOKEN@;"`
    - git remote add origin-tag $PUSH_URL
    - git tag v$IMAGE_TAG
    - git push -o ci.skip origin-tag --tags
    # push image
    - skopeo_copy micro $IMAGE_TAG
  artifacts:
    reports:
      dotenv: ./build.env

include: ".gitlab-ci.d/*.yaml"
